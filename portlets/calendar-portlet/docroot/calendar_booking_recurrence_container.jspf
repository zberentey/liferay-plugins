<%--
/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
int count = 0;
Frequency frequency = null;
int interval = 0;
java.util.Calendar untilJCalendar = startDateJCalendar;
List<Weekday> weekdays = new ArrayList<Weekday>();

boolean afterChecked = false;
boolean onChecked = false;

if (recurrence != null) {
	count = recurrence.getCount();
	frequency = recurrence.getFrequency();
	interval = recurrence.getInterval();

	if (recurrence.getUntilJCalendar() != null) {
		untilJCalendar = recurrence.getUntilJCalendar();
	}

	weekdays = recurrence.getWeekdays();

	if (count > 0) {
		afterChecked = true;
	}

	if (recurrence.getUntilJCalendar() != null) {
		onChecked = true;
	}
}
%>

<table class="calendar-portlet-recurrence-container aui-helper-hidden" id="<portlet:namespace />recurrenceContainer">
	<tbody>
		<tr>
			<th class="calendar-portlet-recurrence-title">
				<liferay-ui:message key="repeats" />:
			</th>
			<td class="calendar-portlet-recurrence-content">
				<aui:select label="" name="frequency">

					<%
					for (Frequency curFrequency : Frequency.values()) {
					%>

						<aui:option selected="<%= (frequency == curFrequency) %>" value="<%= curFrequency.getValue() %>"><%= LanguageUtil.get(locale, curFrequency.getValue().toLowerCase()) %></aui:option>

					<%
					}
					%>

				</aui:select>
			</td>
		</tr>
	</tbody>
	<tbody class="calendar-portlet-interval-view" id="<portlet:namespace />intervalContainer">
		<tr>
			<th class="calendar-portlet-recurrence-title">
				<liferay-ui:message key="repeat-every" />:
			</th>
			<td class="calendar-portlet-recurrence-content">
				<aui:select label="" name="interval">

					<%
					for (int i = 1; i <= 30; i++) {
					%>

						<aui:option selected="<%= (interval == i) %>" value="<%= i %>"><%= i %></aui:option>

					<%
					}
					%>

				</aui:select>

				<span id="<portlet:namespace />intervalLabel"></span>
			</td>
		</tr>
	</tbody>
	<tbody class="calendar-portlet-interval-view <%= (frequency == Frequency.WEEKLY) ? "" : "aui-helper-hidden" %>" id="<portlet:namespace />view<%= Frequency.WEEKLY %>">
		<tr>
			<th class="calendar-portlet-recurrence-title">
				<liferay-ui:message key="repeat-on" />:
			</th>
			<td class="calendar-portlet-recurrence-content">
				<aui:field-wrapper inlineField="<%= true %>" label="">

					<%
					for (Weekday weekday : Weekday.values()) {
					%>

						<aui:input checked="<%= weekdays.contains(weekday) %>" data-weekday='<%= LanguageUtil.get(pageContext, "weekday." + weekday.getValue()) %>' label="<%= weekday.getValue() %>" name="<%= weekday.getValue() %>" type="checkbox" />

					<%
					}
					%>

				</aui:field-wrapper>
			</td>
		</tr>
	</tbody>
	<tbody class="calendar-portlet-interval-view">
		<tr>
			<th class="calendar-portlet-recurrence-title">
				<liferay-ui:message key="ends" />:
			</th>
			<td class="calendar-portlet-recurrence-content">
				<aui:input checked="<%= !afterChecked && !onChecked %>" label="never" name="ends" type="radio" value="never" />

				<aui:field-wrapper inlineField="<%= true %>" label="">
					<aui:input checked="<%= afterChecked %>" label="after" name="ends" type="radio" value="after" />

					<aui:input disabled="<%= !afterChecked %>" label="" name="count" size="5" type="text" value="<%= afterChecked ? count : StringPool.BLANK %>" />

					<liferay-ui:message key="ocurrences" />
				</aui:field-wrapper>

				<aui:field-wrapper cssClass="calendar-portlet-field-date" label="">
					<aui:input checked="<%= onChecked %>" inlineField="<%= true %>" label="on" name="ends" type="radio" value="on" />

					<div class="calendar-portlet-field-datepicker aui-helper-clearfix">
						<liferay-ui:input-date
							dayParam="untilDateDay"
							dayValue="<%= untilJCalendar.get(java.util.Calendar.DATE) %>"
							disabled="<%= !onChecked %>"
							monthParam="untilDateMonth"
							monthValue="<%= untilJCalendar.get(java.util.Calendar.MONTH) %>"
							name="untilDate"
							yearParam="untilDateYear"
							yearRangeEnd="<%= startDateJCalendar.get(java.util.Calendar.YEAR) + 5 %>"
							yearRangeStart="<%= startDateJCalendar.get(java.util.Calendar.YEAR) - 5 %>"
							yearValue="<%= untilJCalendar.get(java.util.Calendar.YEAR) %>"
						/>
					</div>
				</aui:field-wrapper>
			</td>
		</tr>
	</tbody>
	<tbody class="calendar-portlet-interval-view">
		<tr>
			<th class="calendar-portlet-recurrence-title">
				<liferay-ui:message key="summary" />:
			</th>
			<td class="calendar-portlet-recurrence-content">
				<span class="calendar-portlet-recurrence-summary" id="<portlet:namespace />summaryPreview">
					<liferay-ui:message key="none" />
				</span>
			</td>
		</tr>
	</tbody>
</table>

<aui:script use="aui-dialog">
	var countNode = A.one('#<portlet:namespace />count');
	var endsRadioNodes = A.all('[name=<portlet:namespace />ends]');
	var frequencyNode = A.one('#<portlet:namespace />frequency');
	var recurrenceContainerNode = A.one('#<portlet:namespace />recurrenceContainer');
	var repeatCheckboxNode = A.one('#<portlet:namespace />repeatCheckbox');
	var summaryNode = A.one('#<portlet:namespace />summary');

	var untilDateDatePicker = Liferay.component('<portlet:namespace />untilDatedatePicker');

	window.<portlet:namespace />recurrenceDialog;

	window.<portlet:namespace />openRecurrenceDialog = function(visible) {
		var instance = this;

		if (!window.<portlet:namespace />recurrenceDialog) {
			window.<portlet:namespace />recurrenceDialog = new A.Dialog(
				{
					after: {
						visibleChange: function(event) {
							if (event.newVal) {
								recurrenceContainerNode.show();
							}

							window.<portlet:namespace />updateSummary(summaryNode);
							window.<portlet:namespace />updateSummary('#<portlet:namespace />summaryPreview');
						}
					},
					bodyContent: recurrenceContainerNode,
					buttons: [
						{
							handler: function() {
								this.hide();
							},
							label: '<liferay-ui:message key="done" />'
						}
					],
					centered: true,
					modal: true,
					render: '#<portlet:namespace />fm',
					title: '<liferay-ui:message key="repeat" />',
					visible: false,
					width: 600
				}
			);
		}

		window.<portlet:namespace />recurrenceDialog.set('visible', visible);
	};

	recurrenceContainerNode.delegate(
		'change',
		function(event) {
			var target = event.target;

			if (target.test('#<portlet:namespace />frequency')) {
				window.<portlet:namespace />toggleView('<%= Frequency.WEEKLY %>', (target.val() == '<%= Frequency.WEEKLY %>'));
			}

			var endValue = endsRadioNodes.filter(':checked').val()[0];

			if ((endValue == 'never') || (endValue == 'on')) {
				countNode.set('disabled', true);
			}
			else {
				countNode.set('disabled', false);
			}

			countNode.selectText();

			if ((endValue == 'never') || (endValue == 'after')) {
				untilDateDatePicker.set('disabled', true);
			}
			else {
				untilDateDatePicker.set('disabled', false);
			}

			window.<portlet:namespace />updateSummary('#<portlet:namespace />summaryPreview');
		},
		'select,input'
	);

	repeatCheckboxNode.on(
		'change',
		function(event) {
			var checked = event.currentTarget.get('checked');

			if (!checked) {
				summaryNode.empty();
			}

			<portlet:namespace />openRecurrenceDialog(checked);
		}
	);

	summaryNode.on(
		'click',
		function(event) {
			<portlet:namespace />openRecurrenceDialog(true);

			event.halt();
		}
	);

	window.<portlet:namespace />getSummary = function() {
		var intervalNode = A.one('#<portlet:namespace />interval');
		var weekdays = A.all('#<portlet:namespace />view<%= Frequency.WEEKLY %> input:checked');

		var selectedWeekdays = [];

		if (weekdays.size()) {
			selectedWeekdays = weekdays.getAttribute('data-weekday');
		}

		var endValue = endsRadioNodes.filter(':checked').val()[0];

		var recurrence = {
			count: countNode.val(),
			endValue: endValue,
			frequency: frequencyNode.val(),
			interval: intervalNode.val(),
			untilDate: untilDateDatePicker.calendar.get('dates.0'),
			weekdays: selectedWeekdays
		}

		return Liferay.RecurrenceUtil.getSummary(recurrence);
	};

	window.<portlet:namespace />toggleView = function(viewName, show) {
		var viewNode = A.one('#<portlet:namespace />view' + viewName);

		if (viewNode) {
			viewNode.toggle(show);
		}
	};

	window.<portlet:namespace />updateSummary = function(element) {
		var previewNode = A.one(element);

		if (previewNode) {
			previewNode.html(window.<portlet:namespace />getSummary());
		}
	};

	<c:if test="<%= recurring %>">
		window.<portlet:namespace />updateSummary(summaryNode);
	</c:if>
</aui:script>